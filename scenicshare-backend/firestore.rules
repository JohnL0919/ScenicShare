rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Routes (Paths) collection
    match /Paths/{pathId} {
      // Anyone can read routes (for discovery)
      allow read: if true;
      
      // Only authenticated users can create routes
      allow create: if isAuthenticated() 
                    && request.resource.data.creatorID == request.auth.uid;
      
      // Only the creator can update or delete their routes
      allow update, delete: if isAuthenticated() 
                            && resource.data.creatorID == request.auth.uid;
      
      // Waypoints subcollection
      match /waypoints/{waypointId} {
        // Anyone can read waypoints (for viewing routes)
        allow read: if true;
        
        // Only authenticated users can create waypoints for their routes
        allow create: if isAuthenticated() 
                      && request.resource.data.creatorID == request.auth.uid;
        
        // Only the creator can update or delete waypoints
        allow update, delete: if isAuthenticated() 
                              && resource.data.creatorID == request.auth.uid;
      }
    }
    
    // Users collection (if you add user profiles later)
    match /Users/{userId} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}