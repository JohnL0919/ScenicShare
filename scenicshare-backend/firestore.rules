rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check authentication
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection - users can read/write their own data
    match /Users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Paths collection - public routes visible to all, private only to owner
    match /Paths/{pathId} {
      // Anyone can read public paths, owners can read their own (public or private)
      allow read: if resource.data.isPublic == true 
        || (isAuthenticated() && resource.data.creatorID == request.auth.uid);
      
      // Only authenticated users can create paths
      allow create: if isAuthenticated() 
        && request.resource.data.creatorID == request.auth.uid;
      
      // Only the creator can update or delete their paths
      allow update, delete: if isAuthenticated() 
        && resource.data.creatorID == request.auth.uid;
      
      // Waypoints subcollection
      match /waypoints/{waypointId} {
        // Anyone can read waypoints of public paths, owners can read their own
        allow read: if get(/databases/$(database)/documents/Paths/$(pathId)).data.isPublic == true
          || (isAuthenticated() && get(/databases/$(database)/documents/Paths/$(pathId)).data.creatorID == request.auth.uid);
        
        // Only path creator can write waypoints
        allow write: if isAuthenticated() 
          && get(/databases/$(database)/documents/Paths/$(pathId)).data.creatorID == request.auth.uid;
      }
    }
  }
}